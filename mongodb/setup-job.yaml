apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-job
spec:
  ttlSecondsAfterFinished: 100
  template:
    spec:
      containers:
        - name: mongodb-setup
          image: mongo:latest
          command:
            - /bin/bash
            - -c
            - |
              sleep 30
              
              mongosh "mongodb://root:$(MONGODB_ROOT_PASSWORD)@mongodb:27017/admin" --eval "
                  db = db.getSiblingDB('$(MONGODB_DATABASE)');
              
                  const userExists = db.getUser('$(MONGODB_USERNAME)');
              
                  if (!userExists) {
                    print('Creating user $(MONGODB_USERNAME)');
                    db.createUser({
                      user: '$(MONGODB_USERNAME)',
                      pwd: '$(MONGODB_PASSWORD)',
                      roles: [{ role: 'readWrite', db: '$(MONGODB_DATABASE)' }]
                    });
                    print('User created successfully');
                  } else {
                    print('User $(MONGODB_USERNAME) already exists, skipping creation');
                  }
              "
          env:
            - name: MONGODB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: root-password
            - name: MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: username
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: password
            - name: MONGODB_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: database
      restartPolicy: OnFailure
